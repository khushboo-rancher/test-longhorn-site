<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Environment on Longhorn Manual Test Cases</title>
    <link>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/</link>
    <description>Recent content in Environment on Longhorn Manual Test Cases</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cluster using customize kubelet root directory</title>
      <link>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/cluster-using-customized-kubelet-root-directory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/cluster-using-customized-kubelet-root-directory/</guid>
      <description> Set up a cluster using a customized kubelet root directory. e.g., launching k3s k3s server --kubelet-arg &amp;quot;root-dir=/var/lib/longhorn-test&amp;quot; &amp;amp; Install Longhorn with env KUBELET_ROOT_DIR in longhorn-driver-deployer being set to the corresponding value. Launch a pod using Longhorn volumes via StorageClass. Everything should work fine. Delete the pod and the PVC. Everything should be cleaned up.  </description>
    </item>
    
    <item>
      <title>Compatibility with k3s and SELinux</title>
      <link>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/k3s-selinux-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/k3s-selinux-compatibility/</guid>
      <description>Set up a node with CentOS and make sure that the output of sestatus indicates that SELinux is enabled and set to Enforcing. Run the k3s installation script. Install Longhorn. The system should come up successfully. The logs of the Engine Image pod should only say installed, and the system should be able to deploy a Volume successfully from the UI.  Note: There appears to be some problems with running k3s on CentOS, presumably due to the firewalld rules.</description>
    </item>
    
    <item>
      <title>Test Longhorn Deployment on RKE2 with CIS-1.5 profile</title>
      <link>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/rke2-cis-1.5-profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://khushboo-rancher/test-longhorn-site/manual/pre-release/environment/rke2-cis-1.5-profile/</guid>
      <description>Related issue https://github.com/longhorn/longhorn/issues/2292
Longhorn v1.1.1 should work on RKE2 with CIS-1.5 profile
Scenario  Prepare 1 control plane node and 3 worker nodes Install RKE2 with CIS-1.5 profile on 1 control plane node  sudo su - systemctl disable firewalld systemctl stop firewalld curl -sfL https://get.rke2.io | sh - systemctl enable rke2-server.service cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/sysctl.d/60-rke2-cis.conf vm.panic_on_oom=0 vm.overcommit_memory=1 kernel.panic=10 kernel.panic_on_oops=1 EOF sudo systemctl restart systemd-sysctl useradd -r -c &amp;#34;etcd user&amp;#34; -s /sbin/nologin -M etcd mkdir -p /etc/rancher/rke2/ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/rancher/rke2/config.</description>
    </item>
    
  </channel>
</rss>
